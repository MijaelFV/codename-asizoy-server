{
  "compilerOptions": {
    /* Basic Options */
    "outDir": "dist" /* Redirect output structure to the directory. */,
    "module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    "types": ["jest", "node"],
    "target": "es6",
    "declaration": true,
    /* Strict Type-Checking Options */
    "noImplicitAny": true,
    "resolveJsonModule": true,

    /* Module Resolution Options */
    "moduleResolution": "Node" /* Search under node_modules for non-relative imports. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Imports non-ES modules as default imports. */,

    /* Aditional options */
    "sourceMap": true /* Enables the generation of sourcemap files. These files allow debuggers and other tools to display the original TypeScript source code when actually working with the emitted JavaScript files. */,
    "jsx": "react" /* Controls how JSX constructs are emitted in JavaScript files. This only affects output of JS files that started in .tsx files. */,
    "allowJs": true,
    "skipLibCheck": true,    
       
    // Recommendations
    "importHelpers": true, // https://webhint.io/docs/user-guide/hints/hint-typescript-config/import-helpers/
    "strict": true, // https://webhint.io/docs/user-guide/hints/hint-typescript-config/strict/
    "forceConsistentCasingInFileNames": true // https://webhint.io/docs/user-guide/hints/hint-typescript-config/consistent-casing/
  },
  "exclude": ["node_modules", "lib", "dist"]
}
